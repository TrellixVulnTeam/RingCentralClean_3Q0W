{"ast":null,"code":"var _jsxFileName = \"/Users/younis/Desktop/RingCentral/client/src/components/CallPage/CallPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getRequest, postRequest } from \"../../utlis/apiRequests\";\nimport { BASE_URL, GET_CALL_ID, SAVE_CALL_ID } from \"../../utlis/apiEndpoints\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./CallPgae.scss\";\nimport Messenger from \"./../UI/Messenger/Messenger\";\nimport MessageListReducer from \"../../reducer/MessageListReducer\";\nimport Alert from \"../UI/Alert/Alert\";\nimport MeetingInfo from \"../UI/MeetingInfo/MeetingInfo\";\nimport CallPageFooter from \"../UI/CallPageFooter/CallPageFooter\";\nimport CallPageHeader from \"../UI/CallPageHeader/CallPageHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CallPage = () => {\n  _s();\n\n  const history = useHistory();\n  let {\n    id\n  } = useParams();\n  const userIsAdmin = window.location.hash == \"#init\" ? true : false;\n  const url = `${window.location.origin}${window.location.pathname}`;\n  let alertTimeout = null;\n  let peer = null;\n  const socket = io.connect(\"http://localhost:1111\");\n  const initialState = [];\n  const [messageList, messageListReducer] = useReducer(MessageListReducer, initialState);\n  const [streamObj, setStreamObj] = useState();\n  const [screenCastStream, setScreenCastStream] = useState();\n  const [meetInfoPopup, setMeetInfoPopup] = useState(false);\n  const [isPresenting, setIsPresenting] = useState(false);\n  const [isMessenger, setIsMessenger] = useState(false);\n  const [messageAlert, setMessageAlert] = useState({});\n  const [isAudio, setIsAudio] = useState(true);\n  useEffect(() => {\n    if (userIsAdmin) {\n      setMeetInfoPopup(true);\n    }\n\n    initWebRtc();\n    socket;\n  }, []);\n\n  const initWebRtc = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      peer = new Peer({\n        initiator: userIsAdmin,\n        trickle: false,\n        stream: stream\n      });\n      peer.on(\"signal\", async data => {\n        if (userIsAdmin) {\n          let payload = {\n            id,\n            signalData: data\n          };\n          await postRequest(`${BASE_URL}${SAVE_CALL_ID}`, payload);\n        } else {//socket event later\n        }\n      });\n      peer.on(\"connect\", () => {\n        console.log(\"peer connected\");\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"callpage-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video-container\",\n      controls: true,\n      src: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallPageHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallPageFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), userIsAdmin && MeetingInfo && /*#__PURE__*/_jsxDEV(MeetingInfo, {\n      setMeetInfoPopup: setMeetInfoPopup,\n      url: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Messenger, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CallPage, \"9gO+pA0ESH6jihDqvw4+p9EjDt8=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CallPage;\nexport default CallPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallPage\");","map":{"version":3,"sources":["/Users/younis/Desktop/RingCentral/client/src/components/CallPage/CallPage.jsx"],"names":["useEffect","useReducer","useState","useParams","useHistory","getRequest","postRequest","BASE_URL","GET_CALL_ID","SAVE_CALL_ID","io","Peer","Messenger","MessageListReducer","Alert","MeetingInfo","CallPageFooter","CallPageHeader","CallPage","history","id","userIsAdmin","window","location","hash","url","origin","pathname","alertTimeout","peer","socket","connect","initialState","messageList","messageListReducer","streamObj","setStreamObj","screenCastStream","setScreenCastStream","meetInfoPopup","setMeetInfoPopup","isPresenting","setIsPresenting","isMessenger","setIsMessenger","messageAlert","setMessageAlert","isAudio","setIsAudio","initWebRtc","navigator","mediaDevices","getUserMedia","video","audio","then","stream","initiator","trickle","on","data","payload","signalData","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getRequest, postRequest } from \"../../utlis/apiRequests\";\nimport { BASE_URL, GET_CALL_ID, SAVE_CALL_ID } from \"../../utlis/apiEndpoints\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./CallPgae.scss\";\nimport Messenger from \"./../UI/Messenger/Messenger\";\nimport MessageListReducer from \"../../reducer/MessageListReducer\";\nimport Alert from \"../UI/Alert/Alert\";\nimport MeetingInfo from \"../UI/MeetingInfo/MeetingInfo\";\nimport CallPageFooter from \"../UI/CallPageFooter/CallPageFooter\";\nimport CallPageHeader from \"../UI/CallPageHeader/CallPageHeader\";\n\nconst CallPage = () => {\n  const history = useHistory();\n  let { id } = useParams();\n  const userIsAdmin = window.location.hash == \"#init\" ? true : false;\n  const url = `${window.location.origin}${window.location.pathname}`;\n  let alertTimeout = null;\n\n  let peer = null;\n  const socket = io.connect(\"http://localhost:1111\");\n\n  const initialState = [];\n  const [messageList, messageListReducer] = useReducer(\n    MessageListReducer,\n    initialState\n  );\n\n  const [streamObj, setStreamObj] = useState();\n  const [screenCastStream, setScreenCastStream] = useState();\n  const [meetInfoPopup, setMeetInfoPopup] = useState(false);\n  const [isPresenting, setIsPresenting] = useState(false);\n  const [isMessenger, setIsMessenger] = useState(false);\n  const [messageAlert, setMessageAlert] = useState({});\n  const [isAudio, setIsAudio] = useState(true);\n\n  useEffect(() => {\n    if (userIsAdmin) {\n      setMeetInfoPopup(true);\n    }\n\n    initWebRtc();\n\n    socket\n  }, []);\n\n  const initWebRtc = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream) => {\n        peer = new Peer({\n          initiator: userIsAdmin,\n          trickle: false,\n          stream: stream,\n        });\n\n        peer.on(\"signal\", async (data) => {\n          if (userIsAdmin) {\n            let payload = {\n              id,\n              signalData: data,\n            };\n            await postRequest(`${BASE_URL}${SAVE_CALL_ID}`, payload);\n          } else {\n            //socket event later\n          }\n        });\n        peer.on(\"connect\", () => {\n          console.log(\"peer connected\");\n        });\n      });\n  };\n\n  return (\n    <div className=\"callpage-container\">\n      <video className=\"video-container\" controls src=\"\"></video>\n\n      <CallPageHeader />\n      <CallPageFooter />\n      {userIsAdmin && MeetingInfo && (\n        <MeetingInfo setMeetInfoPopup={setMeetInfoPopup} url={url} />\n      )}\n\n      <Messenger />\n    </div>\n  );\n};\n\nexport default CallPage;\n"]},"metadata":{},"sourceType":"module"}